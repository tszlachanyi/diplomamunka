#version 460 core
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout (binding = 1, r32ui) readonly uniform uimage2D inputImage;
layout (binding = 3, r32ui) writeonly uniform uimage2D outputImage;

layout(binding = 0) uniform atomic_uint minCounter;

uniform uint TILE_VALUES;

uint nthBit(uint number, uint n)
{
	return (number >> n) & 1;
}

bool tilePossible(uint number, uint i)
{
	return (nthBit(number, i) == 1);
}

uint entropy(uint number)
{
	uint entropy = 0;
	for (int i = 0; i < TILE_VALUES; i++)
	{
		if (tilePossible(number, i))
		{
			entropy ++;
		}
	}

	return entropy;
}

void main()
{
	ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
	uint value = imageLoad(inputImage, pixelCoords)[0];
	uint entropy = entropy(value);

	imageStore(outputImage, pixelCoords, uvec4(entropy, 0u, 0u, 0u));
	
	if (entropy > 1)
	{
		atomicCounterMin(minCounter, entropy);
	}
	
}