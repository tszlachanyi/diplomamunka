#version 460 core
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout (binding = 1, r32ui) readonly uniform uimage2D inputImage;
layout (binding = 2, r32ui) writeonly uniform uimage2D outputImage;

uniform ivec3 rules[100];
uniform uint rulesAmount;
uniform uint chosenValue;
uniform ivec2 chosenCoords; // Cell choosen to get collapsed
ivec2 currentCoords; // Current cell
ivec2 chosenBlockCoords; // The block the chosen cell is in
ivec2 currentBlockCoords; // The block the current cell is in
int blockSize = 3;

void main()
{
	currentCoords = ivec2(gl_GlobalInvocationID.xy);
	chosenBlockCoords = ivec2(vec2(chosenCoords) / vec2(blockSize));
	currentBlockCoords = ivec2(vec2(currentCoords) / vec2(blockSize));

	uint cellValue;


	if (currentCoords == chosenCoords)		// Give the chosen value to the chosen cell
	{
		cellValue = chosenValue;
	}
	else	// Use rules on other cells
	{
		cellValue = imageLoad(inputImage, currentCoords)[0];
		
		// Same Column
		if (currentCoords.x == chosenCoords.x)
		{
			cellValue = cellValue & (~chosenValue);
		}

		// Same Row
		if (currentCoords.y == chosenCoords.y)
		{
			cellValue = cellValue & (~chosenValue);
		}

		// Same Block
		if (chosenBlockCoords == currentBlockCoords)
		{
			cellValue = cellValue & (~chosenValue);
		}
		
	}

	imageStore(outputImage, currentCoords, uvec4(cellValue, 0u, 0u, 0u));
}